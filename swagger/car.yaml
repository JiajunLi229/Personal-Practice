openapi: '3.0.0'
servers:
  - url: 'http://localhost:8080/'
info:
  description: 'Realval platform'
  version: '1.0.0'
  title: 'cars API'
  termsOfService: 'http://localhost:8080/terms-of-use/'
  contact:
    name: Jiajun Li
    email: jiajun.li@hometrack.com.au
    url: jiajun.li@hometrack.com.au
paths:
  /cars:
    get:
      summary: Get all cars
      description: Endpoint to get all cars
      parameters:
        - name: color
          in: query
          description: select specific cars according to color
          schema:
            type: string
        - name: type
          in: query
          description: select specific cars according to type
          schema:
            type: string
      responses:
        '200':
          description: Successfully get all cars
          content:
            application/json:
              schema:
                type: array
                items:
                  type: car
                  properties:
                    id:
                      type: integer
                    type:
                      type: string
                    color:
                      type: string
    post:
      description: create a new car
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - type
                - color
              properties:
                id:
                  type: integer
                type:
                  type: string
                color:
                  type: string
      responses:
        '200':
          description: Successfully created a new car
        '400':
          $ref: '#/components/responses/400Error'

  /cars/{id}:
    get:
      description: get car which has specific Id
      parameters:
        - name: id
          in: path #这是什么意思？
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: Successfully returned an car according to id
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  type:
                    type: string
                  color:
                    type: string

        '404':
          description: requested car not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:

  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
